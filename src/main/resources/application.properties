spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/proposta
spring.datasource.username=root
spring.datasource.password=Adm!n1str@d0r
spring.jpa.hibernate.ddl-auto=update
spring.application.name=proposta
server.port=${PROPOSTA_APP_PORT:8081}

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Actuator Properties
management.endpoints.web.exposure.include=health,info, prometheus
management.endpoint.info.enabled=true
management.endpoint.health.enabled=true
management.endpoint.prometheus.enabled=true

management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true 
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:servico de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}
management.metrics.distribution.percentiles-histogram.http.server.requests=true

spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:8080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:8080/auth/realms/nosso-cartao/protocol/openid-connect/certs}
logging.level.org.springframework.security=DEBUG

#scheduled
proposta.timed.cartaoAnalise=${TIMED_CARTAO_ANALISE:60000}
#external config
proposta.external.financeira.host=${FINANCEIRA_HOST:localhost}
proposta.external.financeira.port=${FINANCEIRA_PORT:9999}
proposta.external.cartoes.host=${CARTOES_HOST:localhost}
proposta.external.cartoes.port=${CARTOES_PORT:8888}

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name}
# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}